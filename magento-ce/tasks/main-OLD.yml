---
- name: Create Document Root
  file:
    path: '{{ magento_document_root }}'
    state: directory
    mode: 0755

- name: Create Magento SFTP User
  user:
    name: '{{ magento_sftp_user }}'
    home: '{{ magento_document_root }}'
    password: '{{ magento_sftp_password | password_hash("sha512") }}'
    comment: '{{ magento_vhost_domain }}'

- name: Reload Nginx
  service:
    name: nginx
    state: reloaded

- name: Download Magento
  get_url:
    url: 'https://3fb66be59b12e2b636cf-d69d20d277a755fdadf91611975f2510.ssl.cf5.rackcdn.com/magento-{{ magento_version }}.tar.gz'
    dest: '{{ magento_document_root }}'
    owner: '{{ nginx_vhost_user }}'
    group: '{{ nginx_vhost_user }}'
    validate_certs: no
  when: magento_install

- name: Download Sample Content
  get_url:
    url: "https://3fb66be59b12e2b636cf-d69d20d277a755fdadf91611975f2510.ssl.cf5.rackcdn.com/magento-sample-data-{{ magento_sample_content_version }}.tar.gz"
    dest: '{{ magento_document_root }}'
    owner: '{{ nginx_vhost_user }}' 
    group: '{{ nginx_vhost_user }}'
    validate_certs: no
  when: (magento_sample_content == 'True') and magento_install

- name: Unpack Magento
  unarchive:
    src: '{{ magento_document_root }}/magento-{{ magento_version }}.tar.gz'
    dest: '{{ magento_document_root }}'
    copy: no
  when: magento_install

- name: Unpack Sample Content
  unarchive:
    src: '{{ magento_document_root }}/magento-sample-data-{{ magento_version }}.tar.gz'
    dest: '{{ magento_document_root }}'
    copy: no
  when: (magento_sample_content == 'True') and magento_install

#- name: Create Magento Database
#  mysql_db:
#    name: '{{ magento_db_name }}'
#    state: present
#    login_user: '{{ mysql_root_user }}'
#    login_password: '{{ mysql_root_password }}'
#    login_host: '{{ mysql_host_ip }}'
#  when: magento_create_db and magento_install
#
#- name: Create Magento Database User
#  mysql_user:
#    name: '{{ magento_db_user }}'
#    password: '{{ magento_db_password }}'
#    host: '%'
#    priv: '{{ magento_db_name }}.*:ALL'
#    state: present
#    login_user: '{{ mysql_root_user }}'
#    login_password: '{{ mysql_root_password }}'
#    login_host: '{{ mysql_host_ip }}'
#  when: magento_create_db and magento_install

- name: Configure .my.cnf
  template:
    src: 'Common/.my.cnf.j2'
    dest: '/root/.my.cnf'
    owner: root
    group: root
    mode: 0600
  when: magento_install

- name: Import Sample MySQL Data
  mysql_db:
    name: '{{ magento_db_name }}'
    target: '{{ magento_document_root }}/magento-sample-data-{{ magento_sample_content_version }}/magento_sample_data_for_{{ magento_sample_content_version }}.sql'
    state: import
    login_host: '{{ mysql_host_ip }}'
  when: (magento_sample_content == 'True') and magento_install

- name: Copy Core Files
  shell: 'cp -R {{ magento_document_root }}/magento/{{ item }} {{ magento_document_root }}/'
  args:
    chdir: '{{ magento_document_root }}'
  with_items:
    - '*'
    - '.htaccess'
  when: magento_install

- name: Copy Core Sample Files
  copy:
    src: '{{ magento_document_root }}/magento-sample-data-{{ magento_sample_content_version }}/{{ item }}'
    dest: '{{ magento_document_root }}'
    force: yes
  with_items:
    - 'media'
    - 'skin'
  when: (magento_sample_content == 'True') and magento_install

- name: Delete Garbage Files
  file:
    path: '{{ magento_document_root }}/{{ item }}'
    state: absent
  with_items:
    magento_garbage_files
  when: magento_install

- name: Configure Directory Ownership and Permissions
  file:
    path: '{{ magento_document_root }}'
    owner: '{{ nginx_vhost_user }}'
    group: '{{ nginx_vhost_user }}'
    mode: 0755
    state: directory
    recurse: yes
  when: magento_install

- name: Configure File Level Permissions
  command: 'find . -type f -exec chmod 644 {} ";"'
  args:
    chdir: '{{ magento_document_root }}'
  register: file_perm_change
  changed_when: file_perm_change.stdout
  when: magento_install

- name: Set Mage as Executable
  file:
    path: '{{ magento_document_root }}/mage'
    mode: 0500
    state: file
  when: magento_install

- name: Run 'mage mage-setup'
  command: '{{ magento_document_root }}/mage mage-setup .'
  args:
    chdir: '{{ magento_document_root }}'
  when: magento_install

- name: Set Mage Preferred_State to Stable
  command: '{{ magento_document_root }}/mage config-set preferred_state stable'
  args:
    chdir: '{{ magento_document_root }}'
  when: magento_install

- name: Run Mage Install
  command: '{{ magento_document_root }}/mage install http://connect20.magentocommerce.com/community Mage_All_Latest --force'
  args:
    chdir: '{{ magento_document_root }}'
  when: magento_install

- name: Run Magento Installer
  command: 'php -f install.php -- --license_agreement_accepted "yes" --locale "en_US" --timezone "{{ tz }}" --default_currency "USD" --db_host {{ mysql_host_ip }} --db_name {{ magento_db_name }} --db_user {{ magento_db_user }} --db_pass {{ magento_db_password }} --url http://{{ magento_vhost_domain }} --skip_url_validation --use_rewrites "yes" --use_secure "no" --secure_base_url https://{{ magento_vhost_domain }} --use_secure_admin "no" --admin_firstname {{ magento_admin_fname }} --admin_lastname {{ magento_admin_lname }} --admin_email {{ magento_admin_email }} --admin_username {{ magento_admin_user }} --admin_password {{ magento_admin_pass }}'
  args:
    chdir: "{{ magento_document_root }}"
  when: magento_install

- name: Run Magento Reindex
  command: 'php -f shell/indexer.php reindexall'
  args:
    chdir: "{{ magento_document_root }}"
  when: magento_install

- name: Fix permissions
  file:
    path: '{{ magento_document_root }}'
    owner: '{{ nginx_vhost_user }}'
    group: '{{ nginx_vhost_user }}'
    mode: 0755
    state: directory
    recurse: yes
  when: magento_install
